INCLUDE(CheckCXXCompilerFlag)
INCLUDE(CheckIncludeFileCXX)

ADD_LIBRARY(libnetwrk INTERFACE)

TARGET_INCLUDE_DIRECTORIES(libnetwrk INTERFACE "${ASIO_INCLUDES}")
TARGET_INCLUDE_DIRECTORIES(libnetwrk INTERFACE "${LIBNETWRK_INCLUDES}")

IF(POLICY CMP0077)
    CMAKE_POLICY(SET CMP0067 NEW)
ENDIF()

IF(UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    CHECK_CXX_COMPILER_FLAG("-fconcepts"   LIBNETWRK_SUPPORTS_CONCEPTS)
    CHECK_CXX_COMPILER_FLAG("-fcoroutines" LIBNETWRK_SUPPORTS_COROUTINES)

    IF(NOT LIBNETWRK_SUPPORTS_CONCEPTS)
        MESSAGE(WARNING "Compiler doesn't support concepts.")
    ENDIF()

    IF(NOT LIBNETWRK_SUPPORTS_COROUTINES)
        MESSAGE(WARNING "Compiler doesn't support coroutines.")
    ENDIF()

    TARGET_COMPILE_OPTIONS(libnetwrk INTERFACE "-fconcepts")
    TARGET_COMPILE_OPTIONS(libnetwrk INTERFACE "-fcoroutines")

    CHECK_INCLUDE_FILE_CXX("coroutine" LIBNETWRK_HAS_COROUTINE "-fcoroutines")
ELSEIF(WIN32)
    CHECK_INCLUDE_FILE_CXX("coroutine" LIBNETWRK_HAS_COROUTINE)
ENDIF()

IF(LIBNETWRK_HAS_COROUTINE)
    TARGET_COMPILE_DEFINITIONS(libnetwrk INTERFACE -DASIO_HAS_STD_COROUTINE)
ELSE()
    MESSAGE(WARNING "Failed to find coroutine headers.'")
ENDIF()

TARGET_COMPILE_DEFINITIONS(libnetwrk INTERFACE -DASIO_HAS_CO_AWAIT)
